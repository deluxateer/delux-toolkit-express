//- -----------------------------------------------------------------------------
//- This file contains all application-wide Pug mixins.
//- -----------------------------------------------------------------------------

//- outputs duplicate elements without explicitly writing them out
//- @param {Number} count - the total number of elements desired
//- @example making 10 paragraph elements
//-   +loop(10)
//-     p This will appear 10 times
mixin loop(count)
  - let n = 0
  while n < count
    block
    - n++

//- Returns URL to an image based on its path
//- @param {String} path - image path
//- @param {String} altText [''] - text for the alt attribute
//- @param {Object} options - optional options which are listed below
//- @param {Boolean} lazyload [true] - if lazyloading is desired, it will use a data-attribute instead of src
//- @param {String} classes [null] - classes for the image
//- @param {String} base [baseURL] - base URL
//- @require path, baseURL
mixin image(path, altText='', options={})
  -
    const base = options.base || baseURL;
    const fullPath = `${base}img/${path}`;
    const lazyload = options.lazyload === false ? false : true;
    const classes = options.classes || null;
  
  img(
    src= lazyload ? null : fullPath
    data-lazy= lazyload ? fullPath : null
    alt=altText
    class=classes)
